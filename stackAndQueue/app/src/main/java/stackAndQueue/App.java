/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stackAndQueue;

public class App {

    public static void main(String[] args) throws Exception {
        Stack<String> myStack = new Stack();

        System.out.println(" -----------------  Here is the stack ----------------------- ");
        if (myStack.isEempty()) {
            System.out.println("The stack is empty");
        }

        System.out.println("push to the stack");
        myStack.push("Manar"); // first node
        myStack.push("Alaa");
        myStack.push("Sadan"); // last node

        System.out.println(myStack);
        System.out.println("peek ==> " + myStack.peek());
        System.out.println("pop ==> " + myStack.pop());
        System.out.println(myStack);

        System.out.println("\n");

        System.out.println(" -----------------  Here is the Queue ----------------------- ");

        Queue<String> myQueue = new Queue();
        if (myQueue.isEmpty()) {
            System.out.println("the queue is empty");
        } else {
            System.out.println(myQueue);
        }

        myQueue.enqueue("Mohammad"); // first in
        myQueue.enqueue("Ahmad");
        myQueue.enqueue("Omar");
        myQueue.enqueue("Ali"); // last in
        System.out.println("add to queue (enqueue) ==>  "+myQueue);
        System.out.println("the peek of queue (peek) ==> "+ myQueue.peek());
        System.out.println("remove element : (dequeue ) ==>  "+ myQueue.dequeue());
        System.out.println(myQueue);


    }
}

